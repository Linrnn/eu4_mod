# 不要修改文件名！请保持以下名字“00_buildings.txt”

fort_14th = {
	cost = 100
	time = 0
	onmap = yes
	influencing_fort = yes

	modifier = {
		fort_level = 1
	}
	ai_will_do = {
		factor = 1
	}
}

# 城堡
fort_15th = {
	cost = 200
	time = 0
	onmap = yes
	influencing_fort = yes
	make_obsolete = fort_14th

	modifier = {
		fort_level = 2
	}
	ai_will_do = {
		factor = 1
	}
}

# 法院
courthouse = {
	cost = 400
	time = 0
	modifier = {
		local_state_maintenance_modifier = 1
		local_autonomy = -0.1
		local_governing_cost = -0.25
		allowed_num_of_buildings = 1
	}
	on_built = {
		add_development_from_building = {
			building = courthouse
			type = tax
			value = 1
		}
		if = {
			limit = {
				FROM = { has_country_flag = fra_courthouse_bonus_flag }
			}
			add_province_modifier = {
				name = fra_improved_court_houses_modifier
				duration = -1
			}
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = courthouse
			type = tax
			value = 1
		}
		remove_province_modifier = fra_improved_court_houses_modifier
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 1
		modifier = {
			factor = 2
			FROM = { governing_capacity_percentage = 0.8 }
		}
		modifier = {
			factor = 3
			FROM = { governing_capacity_percentage = 1 }
		}
		modifier = {
			factor = 5
			FROM = { governing_capacity_percentage = 1.1 }
		}
		modifier = {
			factor = 0.75
			FROM = { num_of_loans = 1 }
		}
		modifier = {
			factor = 0.25
			FROM = { num_of_loans = 2 }
		}
		modifier = {
			factor = 0
			FROM = { num_of_loans = 3 }
		}
		modifier = {
			factor = 0.5
			FROM = { is_in_deficit = yes }
		}
		modifier = {
			factor = 1.25
			development = 10
		}
		modifier = {
			factor = 1.25
			development = 20
		}
		modifier = {
			factor = 1.25
			development = 30
		}
		modifier = {
			factor = 0.5
			FROM = { NOT = { treasury = 200 } }
		}
		modifier = {
			factor = 1.25
			FROM = { treasury = 300 }
		}
		#Provinces in the Capital Area don't need a courthouse
		modifier = {
			factor = 0
			area_for_scope_province = {
				is_capital_of = FROM
			}
		}
	}
}

# 市政厅
town_hall = {
	cost = 800
	time = 0

	make_obsolete = courthouse

	modifier = {
		local_state_maintenance_modifier = 1
		local_autonomy = -0.2
		 local_governing_cost= -0.5
		allowed_num_of_buildings = 1
	}

	on_built = {
		add_development_from_upgrading_or_building = {
			building = town_hall
			obsolete_building = courthouse
			type = tax
			value = 2
			upgrade_value = 1
		}
		if = {
			limit = {
				FROM = { has_country_flag = fra_courthouse_bonus_flag }
				NOT = { has_province_modifier = fra_improved_court_houses_modifier }
			}
			add_province_modifier = {
				name = fra_improved_court_houses_modifier
				duration = -1
			}
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = town_hall
			type = tax
			value = 2
		}
		remove_province_modifier = fra_improved_court_houses_modifier
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 1
		modifier = {
			factor = 10
			has_building = courthouse
		}
		modifier = {
			factor = 2
			FROM = { governing_capacity_percentage = 0.8 }
		}
		modifier = {
			factor = 3
			FROM = { governing_capacity_percentage = 1 }
		}
		modifier = {
			factor = 5
			FROM = { governing_capacity_percentage = 1.1 }
		}
		modifier = {
			factor = 0.75
			FROM = { num_of_loans = 1 }
		}
		modifier = {
			factor = 0.25
			FROM = { num_of_loans = 2 }
		}
		modifier = {
			factor = 0
			FROM = { num_of_loans = 3 }
		}
		modifier = {
			factor = 0.5
			FROM = { is_in_deficit = yes }
		}
		modifier = {
			factor = 1.25
			development = 10
		}
		modifier = {
			factor = 1.25
			development = 20
		}
		modifier = {
			factor = 1.25
			development = 30
		}
		modifier = {
			factor = 0.5
			FROM = { NOT = { treasury = 300 } }
		}
		modifier = {
			factor = 1.25
			FROM = { treasury = 400 }
		}
		#Provinces in the Capital Area don't need a courthouse
		modifier = {
			factor = 0
			area_for_scope_province = {
				is_capital_of = FROM
			}
		}
	}
}

# 大学
university = {
	cost = 300
	time = 0
	modifier = {
		local_development_cost = -0.20
		allowed_num_of_buildings = 1
		local_state_maintenance_modifier = 1
	}

	on_built = {
		add_development_from_building = {
			building = university
			type = tax
			value = 2
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = university
			type = tax
			value = 2
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		# Hard coded AI sees no value in this above the 0.01 ducats base. Let's multiply that
		factor = 12 # Base of 0.01 ducats per MONTH
		modifier = {
			factor = 10
			development = 16
		}
		modifier = {
			factor = 1.4
			development = 21
		}
		modifier = {
			factor = 1.4
			development = 26
		}
		modifier = {
			factor = 1.4
			development = 30
		}
		modifier = {
			factor = 0
			is_state = no
		}
		modifier = {
			factor = 2
			is_capital = yes
		}
		modifier = {
			factor = 0.5
			OR = {
				has_climate = tropical
				has_climate = arid
			}
		}
		modifier = {
			factor = 0.2
			has_climate = arctic
		}
		modifier = {
			factor = 1.2
			OR = {
				has_terrain = grasslands
				has_terrain = drylands
			}
		}
		modifier = {
			factor = 1.3
			has_terrain = farmlands
		}
		modifier = {
			factor = 2
			is_year = 1690 # Enlightenment spawns in 1700
			not = {
				owner = {
					has_institution = enlightenment
				}
			}
			not = {
				provincial_institution_progress = {
					which = enlightenment
					value = 20
				}
			}
		}
	}
}

# 工厂
manufactory = {
	cost = 500
	time = 0
	modifier = {
		local_state_maintenance_modifier = 1
	}
}

# 州议会
state_house = {
	manufactory = {
		all
	}

	bonus_manufactory = { # Will apply an extra modifier if these goods
		paper
		glass
		gems
	}

	build_trigger = {
		NOT = {
			area_for_scope_province = {
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = state_house
					has_construction = state_house
				}
			}
		}
	}

	keep_trigger = {
		NOT = {
			area_for_scope_province = {
				NOT = { province_id = root }
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = state_house
					has_construction = state_house
				}
			}
		}
	}

	modifier = {
		statewide_governing_cost = -0.2
		min_local_autonomy = -5
		local_governing_cost = -0.15
		local_governing_cost_increase = -10
		allowed_num_of_buildings = 1
		local_state_maintenance_modifier = 1
	}
	bonus_modifier = {
		statewide_governing_cost = -0.2
		min_local_autonomy = -5
		local_governing_cost = -0.15
		local_governing_cost_increase = -10
	}
	onmap = no
	show_separate = yes # Means as a manufactory it will be shown according to the old way
	on_built = {
		add_development_from_building = {
			building = state_house
			type = tax
			value = 2
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = state_house
			type = tax
			value = 2
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 1
	}
}